// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: code_generation.proto
// Protobuf C++ Version: 4.25.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_code_5fgeneration_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_code_5fgeneration_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025001 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "google/protobuf/duration.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_code_5fgeneration_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_code_5fgeneration_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_code_5fgeneration_2eproto;
namespace example {
class TestCodeGenMessage;
struct TestCodeGenMessageDefaultTypeInternal;
extern TestCodeGenMessageDefaultTypeInternal _TestCodeGenMessage_default_instance_;
class TestCodeGenMessage_MapEntry_DoNotUse;
struct TestCodeGenMessage_MapEntry_DoNotUseDefaultTypeInternal;
extern TestCodeGenMessage_MapEntry_DoNotUseDefaultTypeInternal _TestCodeGenMessage_MapEntry_DoNotUse_default_instance_;
}  // namespace example
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace example {
enum TestCodeGenEnum : int {
  TEST_CODE_GEN_ENUM_UNSPECIFIED = 0,
  TEST_CODE_GEN_ENUM_ANOTHER = 1,
  TestCodeGenEnum_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  TestCodeGenEnum_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool TestCodeGenEnum_IsValid(int value);
extern const uint32_t TestCodeGenEnum_internal_data_[];
constexpr TestCodeGenEnum TestCodeGenEnum_MIN = static_cast<TestCodeGenEnum>(0);
constexpr TestCodeGenEnum TestCodeGenEnum_MAX = static_cast<TestCodeGenEnum>(1);
constexpr int TestCodeGenEnum_ARRAYSIZE = 1 + 1;
const ::google::protobuf::EnumDescriptor*
TestCodeGenEnum_descriptor();
template <typename T>
const std::string& TestCodeGenEnum_Name(T value) {
  static_assert(std::is_same<T, TestCodeGenEnum>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to TestCodeGenEnum_Name().");
  return TestCodeGenEnum_Name(static_cast<TestCodeGenEnum>(value));
}
template <>
inline const std::string& TestCodeGenEnum_Name(TestCodeGenEnum value) {
  return ::google::protobuf::internal::NameOfDenseEnum<TestCodeGenEnum_descriptor,
                                                 0, 1>(
      static_cast<int>(value));
}
inline bool TestCodeGenEnum_Parse(absl::string_view name, TestCodeGenEnum* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TestCodeGenEnum>(
      TestCodeGenEnum_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class TestCodeGenMessage_MapEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          TestCodeGenMessage_MapEntry_DoNotUse, std::string, ::int32_t,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_INT32> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      TestCodeGenMessage_MapEntry_DoNotUse, std::string, ::int32_t,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32>;
  TestCodeGenMessage_MapEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestCodeGenMessage_MapEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit TestCodeGenMessage_MapEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const TestCodeGenMessage_MapEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const TestCodeGenMessage_MapEntry_DoNotUse*>(
        &_TestCodeGenMessage_MapEntry_DoNotUse_default_instance_);
  }
  static bool ValidateKey(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "example.TestCodeGenMessage.MapEntry.key");
 }
  static bool ValidateValue(void*) { return true; }
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_code_5fgeneration_2eproto;
};
// -------------------------------------------------------------------

class TestCodeGenMessage final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:example.TestCodeGenMessage) */ {
 public:
  inline TestCodeGenMessage() : TestCodeGenMessage(nullptr) {}
  ~TestCodeGenMessage() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR TestCodeGenMessage(::google::protobuf::internal::ConstantInitialized);

  inline TestCodeGenMessage(const TestCodeGenMessage& from)
      : TestCodeGenMessage(nullptr, from) {}
  TestCodeGenMessage(TestCodeGenMessage&& from) noexcept
    : TestCodeGenMessage() {
    *this = ::std::move(from);
  }

  inline TestCodeGenMessage& operator=(const TestCodeGenMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestCodeGenMessage& operator=(TestCodeGenMessage&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestCodeGenMessage& default_instance() {
    return *internal_default_instance();
  }
  enum TestCodeGenOneofCase {
    kAnEnum = 18,
    kOrABoolean = 19,
    TESTCODEGENONEOF_NOT_SET = 0,
  };

  static inline const TestCodeGenMessage* internal_default_instance() {
    return reinterpret_cast<const TestCodeGenMessage*>(
               &_TestCodeGenMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(TestCodeGenMessage& a, TestCodeGenMessage& b) {
    a.Swap(&b);
  }
  inline void Swap(TestCodeGenMessage* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestCodeGenMessage* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestCodeGenMessage* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TestCodeGenMessage>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestCodeGenMessage& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const TestCodeGenMessage& from) {
    TestCodeGenMessage::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestCodeGenMessage* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "example.TestCodeGenMessage";
  }
  protected:
  explicit TestCodeGenMessage(::google::protobuf::Arena* arena);
  TestCodeGenMessage(::google::protobuf::Arena* arena, const TestCodeGenMessage& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kMapFieldNumber = 16,
    kRepeatedFieldNumber = 17,
    kStringFieldNumber = 14,
    kBytesFieldNumber = 15,
    kDurationFieldNumber = 20,
    kDoubleFieldNumber = 1,
    kFloatFieldNumber = 2,
    kInt32FieldNumber = 3,
    kInt64FieldNumber = 4,
    kUint64FieldNumber = 6,
    kUint32FieldNumber = 5,
    kSint32FieldNumber = 7,
    kSint64FieldNumber = 8,
    kFixed64FieldNumber = 10,
    kFixed32FieldNumber = 9,
    kSfixed32FieldNumber = 11,
    kSfixed64FieldNumber = 12,
    kBoolFieldNumber = 13,
    kAnEnumFieldNumber = 18,
    kOrABooleanFieldNumber = 19,
  };
  // map<string, int32> map = 16;
  int map_size() const;
  private:
  int _internal_map_size() const;

  public:
  void clear_map() ;
  const ::google::protobuf::Map<std::string, ::int32_t>& map() const;
  ::google::protobuf::Map<std::string, ::int32_t>* mutable_map();

  private:
  const ::google::protobuf::Map<std::string, ::int32_t>& _internal_map() const;
  ::google::protobuf::Map<std::string, ::int32_t>* _internal_mutable_map();

  public:
  // repeated string repeated = 17;
  int repeated_size() const;
  private:
  int _internal_repeated_size() const;

  public:
  void clear_repeated() ;
  const std::string& repeated(int index) const;
  std::string* mutable_repeated(int index);
  void set_repeated(int index, const std::string& value);
  void set_repeated(int index, std::string&& value);
  void set_repeated(int index, const char* value);
  void set_repeated(int index, const char* value, std::size_t size);
  void set_repeated(int index, absl::string_view value);
  std::string* add_repeated();
  void add_repeated(const std::string& value);
  void add_repeated(std::string&& value);
  void add_repeated(const char* value);
  void add_repeated(const char* value, std::size_t size);
  void add_repeated(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& repeated() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_repeated();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_repeated() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_repeated();

  public:
  // string string = 14;
  void clear_string() ;
  const std::string& string() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_string(Arg_&& arg, Args_... args);
  std::string* mutable_string();
  PROTOBUF_NODISCARD std::string* release_string();
  void set_allocated_string(std::string* value);

  private:
  const std::string& _internal_string() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_string(
      const std::string& value);
  std::string* _internal_mutable_string();

  public:
  // bytes bytes = 15;
  void clear_bytes() ;
  const std::string& bytes() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_bytes(Arg_&& arg, Args_... args);
  std::string* mutable_bytes();
  PROTOBUF_NODISCARD std::string* release_bytes();
  void set_allocated_bytes(std::string* value);

  private:
  const std::string& _internal_bytes() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_bytes(
      const std::string& value);
  std::string* _internal_mutable_bytes();

  public:
  // .google.protobuf.Duration duration = 20;
  bool has_duration() const;
  void clear_duration() ;
  const ::google::protobuf::Duration& duration() const;
  PROTOBUF_NODISCARD ::google::protobuf::Duration* release_duration();
  ::google::protobuf::Duration* mutable_duration();
  void set_allocated_duration(::google::protobuf::Duration* value);
  void unsafe_arena_set_allocated_duration(::google::protobuf::Duration* value);
  ::google::protobuf::Duration* unsafe_arena_release_duration();

  private:
  const ::google::protobuf::Duration& _internal_duration() const;
  ::google::protobuf::Duration* _internal_mutable_duration();

  public:
  // double double = 1;
  void clear_double_() ;
  double double_() const;
  void set_double_(double value);

  private:
  double _internal_double_() const;
  void _internal_set_double_(double value);

  public:
  // float float = 2;
  void clear_float_() ;
  float float_() const;
  void set_float_(float value);

  private:
  float _internal_float_() const;
  void _internal_set_float_(float value);

  public:
  // int32 int32 = 3;
  void clear_int32() ;
  ::int32_t int32() const;
  void set_int32(::int32_t value);

  private:
  ::int32_t _internal_int32() const;
  void _internal_set_int32(::int32_t value);

  public:
  // int64 int64 = 4;
  void clear_int64() ;
  ::int64_t int64() const;
  void set_int64(::int64_t value);

  private:
  ::int64_t _internal_int64() const;
  void _internal_set_int64(::int64_t value);

  public:
  // uint64 uint64 = 6;
  void clear_uint64() ;
  ::uint64_t uint64() const;
  void set_uint64(::uint64_t value);

  private:
  ::uint64_t _internal_uint64() const;
  void _internal_set_uint64(::uint64_t value);

  public:
  // uint32 uint32 = 5;
  void clear_uint32() ;
  ::uint32_t uint32() const;
  void set_uint32(::uint32_t value);

  private:
  ::uint32_t _internal_uint32() const;
  void _internal_set_uint32(::uint32_t value);

  public:
  // sint32 sint32 = 7;
  void clear_sint32() ;
  ::int32_t sint32() const;
  void set_sint32(::int32_t value);

  private:
  ::int32_t _internal_sint32() const;
  void _internal_set_sint32(::int32_t value);

  public:
  // sint64 sint64 = 8;
  void clear_sint64() ;
  ::int64_t sint64() const;
  void set_sint64(::int64_t value);

  private:
  ::int64_t _internal_sint64() const;
  void _internal_set_sint64(::int64_t value);

  public:
  // fixed64 fixed64 = 10;
  void clear_fixed64() ;
  ::uint64_t fixed64() const;
  void set_fixed64(::uint64_t value);

  private:
  ::uint64_t _internal_fixed64() const;
  void _internal_set_fixed64(::uint64_t value);

  public:
  // fixed32 fixed32 = 9;
  void clear_fixed32() ;
  ::uint32_t fixed32() const;
  void set_fixed32(::uint32_t value);

  private:
  ::uint32_t _internal_fixed32() const;
  void _internal_set_fixed32(::uint32_t value);

  public:
  // sfixed32 sfixed32 = 11;
  void clear_sfixed32() ;
  ::int32_t sfixed32() const;
  void set_sfixed32(::int32_t value);

  private:
  ::int32_t _internal_sfixed32() const;
  void _internal_set_sfixed32(::int32_t value);

  public:
  // sfixed64 sfixed64 = 12;
  void clear_sfixed64() ;
  ::int64_t sfixed64() const;
  void set_sfixed64(::int64_t value);

  private:
  ::int64_t _internal_sfixed64() const;
  void _internal_set_sfixed64(::int64_t value);

  public:
  // bool bool = 13;
  void clear_bool_() ;
  bool bool_() const;
  void set_bool_(bool value);

  private:
  bool _internal_bool_() const;
  void _internal_set_bool_(bool value);

  public:
  // .example.TestCodeGenEnum an_enum = 18;
  bool has_an_enum() const;
  void clear_an_enum() ;
  ::example::TestCodeGenEnum an_enum() const;
  void set_an_enum(::example::TestCodeGenEnum value);

  private:
  ::example::TestCodeGenEnum _internal_an_enum() const;
  void _internal_set_an_enum(::example::TestCodeGenEnum value);

  public:
  // bool or_a_boolean = 19;
  bool has_or_a_boolean() const;
  void clear_or_a_boolean() ;
  bool or_a_boolean() const;
  void set_or_a_boolean(bool value);

  private:
  bool _internal_or_a_boolean() const;
  void _internal_set_or_a_boolean(bool value);

  public:
  void clear_TestCodeGenOneof();
  TestCodeGenOneofCase TestCodeGenOneof_case() const;
  // @@protoc_insertion_point(class_scope:example.TestCodeGenMessage)
 private:
  class _Internal;
  void set_has_an_enum();
  void set_has_or_a_boolean();

  inline bool has_TestCodeGenOneof() const;
  inline void clear_has_TestCodeGenOneof();

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      5, 20, 2,
      68, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::MapField<TestCodeGenMessage_MapEntry_DoNotUse, std::string, ::int32_t,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_INT32>
        map_;
    ::google::protobuf::RepeatedPtrField<std::string> repeated_;
    ::google::protobuf::internal::ArenaStringPtr string_;
    ::google::protobuf::internal::ArenaStringPtr bytes_;
    ::google::protobuf::Duration* duration_;
    double double__;
    float float__;
    ::int32_t int32_;
    ::int64_t int64_;
    ::uint64_t uint64_;
    ::uint32_t uint32_;
    ::int32_t sint32_;
    ::int64_t sint64_;
    ::uint64_t fixed64_;
    ::uint32_t fixed32_;
    ::int32_t sfixed32_;
    ::int64_t sfixed64_;
    bool bool__;
    union TestCodeGenOneofUnion {
      constexpr TestCodeGenOneofUnion() : _constinit_{} {}
        ::google::protobuf::internal::ConstantInitialized _constinit_;
      int an_enum_;
      bool or_a_boolean_;
    } TestCodeGenOneof_;
    ::uint32_t _oneof_case_[1];

    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_code_5fgeneration_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// TestCodeGenMessage

// double double = 1;
inline void TestCodeGenMessage::clear_double_() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.double__ = 0;
}
inline double TestCodeGenMessage::double_() const {
  // @@protoc_insertion_point(field_get:example.TestCodeGenMessage.double)
  return _internal_double_();
}
inline void TestCodeGenMessage::set_double_(double value) {
  _internal_set_double_(value);
  // @@protoc_insertion_point(field_set:example.TestCodeGenMessage.double)
}
inline double TestCodeGenMessage::_internal_double_() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.double__;
}
inline void TestCodeGenMessage::_internal_set_double_(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.double__ = value;
}

// float float = 2;
inline void TestCodeGenMessage::clear_float_() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.float__ = 0;
}
inline float TestCodeGenMessage::float_() const {
  // @@protoc_insertion_point(field_get:example.TestCodeGenMessage.float)
  return _internal_float_();
}
inline void TestCodeGenMessage::set_float_(float value) {
  _internal_set_float_(value);
  // @@protoc_insertion_point(field_set:example.TestCodeGenMessage.float)
}
inline float TestCodeGenMessage::_internal_float_() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.float__;
}
inline void TestCodeGenMessage::_internal_set_float_(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.float__ = value;
}

// int32 int32 = 3;
inline void TestCodeGenMessage::clear_int32() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.int32_ = 0;
}
inline ::int32_t TestCodeGenMessage::int32() const {
  // @@protoc_insertion_point(field_get:example.TestCodeGenMessage.int32)
  return _internal_int32();
}
inline void TestCodeGenMessage::set_int32(::int32_t value) {
  _internal_set_int32(value);
  // @@protoc_insertion_point(field_set:example.TestCodeGenMessage.int32)
}
inline ::int32_t TestCodeGenMessage::_internal_int32() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.int32_;
}
inline void TestCodeGenMessage::_internal_set_int32(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.int32_ = value;
}

// int64 int64 = 4;
inline void TestCodeGenMessage::clear_int64() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.int64_ = ::int64_t{0};
}
inline ::int64_t TestCodeGenMessage::int64() const {
  // @@protoc_insertion_point(field_get:example.TestCodeGenMessage.int64)
  return _internal_int64();
}
inline void TestCodeGenMessage::set_int64(::int64_t value) {
  _internal_set_int64(value);
  // @@protoc_insertion_point(field_set:example.TestCodeGenMessage.int64)
}
inline ::int64_t TestCodeGenMessage::_internal_int64() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.int64_;
}
inline void TestCodeGenMessage::_internal_set_int64(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.int64_ = value;
}

// uint32 uint32 = 5;
inline void TestCodeGenMessage::clear_uint32() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.uint32_ = 0u;
}
inline ::uint32_t TestCodeGenMessage::uint32() const {
  // @@protoc_insertion_point(field_get:example.TestCodeGenMessage.uint32)
  return _internal_uint32();
}
inline void TestCodeGenMessage::set_uint32(::uint32_t value) {
  _internal_set_uint32(value);
  // @@protoc_insertion_point(field_set:example.TestCodeGenMessage.uint32)
}
inline ::uint32_t TestCodeGenMessage::_internal_uint32() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.uint32_;
}
inline void TestCodeGenMessage::_internal_set_uint32(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.uint32_ = value;
}

// uint64 uint64 = 6;
inline void TestCodeGenMessage::clear_uint64() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.uint64_ = ::uint64_t{0u};
}
inline ::uint64_t TestCodeGenMessage::uint64() const {
  // @@protoc_insertion_point(field_get:example.TestCodeGenMessage.uint64)
  return _internal_uint64();
}
inline void TestCodeGenMessage::set_uint64(::uint64_t value) {
  _internal_set_uint64(value);
  // @@protoc_insertion_point(field_set:example.TestCodeGenMessage.uint64)
}
inline ::uint64_t TestCodeGenMessage::_internal_uint64() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.uint64_;
}
inline void TestCodeGenMessage::_internal_set_uint64(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.uint64_ = value;
}

// sint32 sint32 = 7;
inline void TestCodeGenMessage::clear_sint32() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.sint32_ = 0;
}
inline ::int32_t TestCodeGenMessage::sint32() const {
  // @@protoc_insertion_point(field_get:example.TestCodeGenMessage.sint32)
  return _internal_sint32();
}
inline void TestCodeGenMessage::set_sint32(::int32_t value) {
  _internal_set_sint32(value);
  // @@protoc_insertion_point(field_set:example.TestCodeGenMessage.sint32)
}
inline ::int32_t TestCodeGenMessage::_internal_sint32() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.sint32_;
}
inline void TestCodeGenMessage::_internal_set_sint32(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.sint32_ = value;
}

// sint64 sint64 = 8;
inline void TestCodeGenMessage::clear_sint64() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.sint64_ = ::int64_t{0};
}
inline ::int64_t TestCodeGenMessage::sint64() const {
  // @@protoc_insertion_point(field_get:example.TestCodeGenMessage.sint64)
  return _internal_sint64();
}
inline void TestCodeGenMessage::set_sint64(::int64_t value) {
  _internal_set_sint64(value);
  // @@protoc_insertion_point(field_set:example.TestCodeGenMessage.sint64)
}
inline ::int64_t TestCodeGenMessage::_internal_sint64() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.sint64_;
}
inline void TestCodeGenMessage::_internal_set_sint64(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.sint64_ = value;
}

// fixed32 fixed32 = 9;
inline void TestCodeGenMessage::clear_fixed32() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.fixed32_ = 0u;
}
inline ::uint32_t TestCodeGenMessage::fixed32() const {
  // @@protoc_insertion_point(field_get:example.TestCodeGenMessage.fixed32)
  return _internal_fixed32();
}
inline void TestCodeGenMessage::set_fixed32(::uint32_t value) {
  _internal_set_fixed32(value);
  // @@protoc_insertion_point(field_set:example.TestCodeGenMessage.fixed32)
}
inline ::uint32_t TestCodeGenMessage::_internal_fixed32() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.fixed32_;
}
inline void TestCodeGenMessage::_internal_set_fixed32(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.fixed32_ = value;
}

// fixed64 fixed64 = 10;
inline void TestCodeGenMessage::clear_fixed64() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.fixed64_ = ::uint64_t{0u};
}
inline ::uint64_t TestCodeGenMessage::fixed64() const {
  // @@protoc_insertion_point(field_get:example.TestCodeGenMessage.fixed64)
  return _internal_fixed64();
}
inline void TestCodeGenMessage::set_fixed64(::uint64_t value) {
  _internal_set_fixed64(value);
  // @@protoc_insertion_point(field_set:example.TestCodeGenMessage.fixed64)
}
inline ::uint64_t TestCodeGenMessage::_internal_fixed64() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.fixed64_;
}
inline void TestCodeGenMessage::_internal_set_fixed64(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.fixed64_ = value;
}

// sfixed32 sfixed32 = 11;
inline void TestCodeGenMessage::clear_sfixed32() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.sfixed32_ = 0;
}
inline ::int32_t TestCodeGenMessage::sfixed32() const {
  // @@protoc_insertion_point(field_get:example.TestCodeGenMessage.sfixed32)
  return _internal_sfixed32();
}
inline void TestCodeGenMessage::set_sfixed32(::int32_t value) {
  _internal_set_sfixed32(value);
  // @@protoc_insertion_point(field_set:example.TestCodeGenMessage.sfixed32)
}
inline ::int32_t TestCodeGenMessage::_internal_sfixed32() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.sfixed32_;
}
inline void TestCodeGenMessage::_internal_set_sfixed32(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.sfixed32_ = value;
}

// sfixed64 sfixed64 = 12;
inline void TestCodeGenMessage::clear_sfixed64() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.sfixed64_ = ::int64_t{0};
}
inline ::int64_t TestCodeGenMessage::sfixed64() const {
  // @@protoc_insertion_point(field_get:example.TestCodeGenMessage.sfixed64)
  return _internal_sfixed64();
}
inline void TestCodeGenMessage::set_sfixed64(::int64_t value) {
  _internal_set_sfixed64(value);
  // @@protoc_insertion_point(field_set:example.TestCodeGenMessage.sfixed64)
}
inline ::int64_t TestCodeGenMessage::_internal_sfixed64() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.sfixed64_;
}
inline void TestCodeGenMessage::_internal_set_sfixed64(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.sfixed64_ = value;
}

// bool bool = 13;
inline void TestCodeGenMessage::clear_bool_() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.bool__ = false;
}
inline bool TestCodeGenMessage::bool_() const {
  // @@protoc_insertion_point(field_get:example.TestCodeGenMessage.bool)
  return _internal_bool_();
}
inline void TestCodeGenMessage::set_bool_(bool value) {
  _internal_set_bool_(value);
  // @@protoc_insertion_point(field_set:example.TestCodeGenMessage.bool)
}
inline bool TestCodeGenMessage::_internal_bool_() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.bool__;
}
inline void TestCodeGenMessage::_internal_set_bool_(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.bool__ = value;
}

// string string = 14;
inline void TestCodeGenMessage::clear_string() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.string_.ClearToEmpty();
}
inline const std::string& TestCodeGenMessage::string() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:example.TestCodeGenMessage.string)
  return _internal_string();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TestCodeGenMessage::set_string(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.string_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:example.TestCodeGenMessage.string)
}
inline std::string* TestCodeGenMessage::mutable_string() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_string();
  // @@protoc_insertion_point(field_mutable:example.TestCodeGenMessage.string)
  return _s;
}
inline const std::string& TestCodeGenMessage::_internal_string() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.string_.Get();
}
inline void TestCodeGenMessage::_internal_set_string(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.string_.Set(value, GetArena());
}
inline std::string* TestCodeGenMessage::_internal_mutable_string() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.string_.Mutable( GetArena());
}
inline std::string* TestCodeGenMessage::release_string() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:example.TestCodeGenMessage.string)
  return _impl_.string_.Release();
}
inline void TestCodeGenMessage::set_allocated_string(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.string_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.string_.IsDefault()) {
          _impl_.string_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:example.TestCodeGenMessage.string)
}

// bytes bytes = 15;
inline void TestCodeGenMessage::clear_bytes() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.bytes_.ClearToEmpty();
}
inline const std::string& TestCodeGenMessage::bytes() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:example.TestCodeGenMessage.bytes)
  return _internal_bytes();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TestCodeGenMessage::set_bytes(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.bytes_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:example.TestCodeGenMessage.bytes)
}
inline std::string* TestCodeGenMessage::mutable_bytes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_bytes();
  // @@protoc_insertion_point(field_mutable:example.TestCodeGenMessage.bytes)
  return _s;
}
inline const std::string& TestCodeGenMessage::_internal_bytes() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.bytes_.Get();
}
inline void TestCodeGenMessage::_internal_set_bytes(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.bytes_.Set(value, GetArena());
}
inline std::string* TestCodeGenMessage::_internal_mutable_bytes() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.bytes_.Mutable( GetArena());
}
inline std::string* TestCodeGenMessage::release_bytes() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:example.TestCodeGenMessage.bytes)
  return _impl_.bytes_.Release();
}
inline void TestCodeGenMessage::set_allocated_bytes(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.bytes_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.bytes_.IsDefault()) {
          _impl_.bytes_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:example.TestCodeGenMessage.bytes)
}

// map<string, int32> map = 16;
inline int TestCodeGenMessage::_internal_map_size() const {
  return _internal_map().size();
}
inline int TestCodeGenMessage::map_size() const {
  return _internal_map_size();
}
inline void TestCodeGenMessage::clear_map() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.map_.Clear();
}
inline const ::google::protobuf::Map<std::string, ::int32_t>& TestCodeGenMessage::_internal_map() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.map_.GetMap();
}
inline const ::google::protobuf::Map<std::string, ::int32_t>& TestCodeGenMessage::map() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:example.TestCodeGenMessage.map)
  return _internal_map();
}
inline ::google::protobuf::Map<std::string, ::int32_t>* TestCodeGenMessage::_internal_mutable_map() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.map_.MutableMap();
}
inline ::google::protobuf::Map<std::string, ::int32_t>* TestCodeGenMessage::mutable_map() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:example.TestCodeGenMessage.map)
  return _internal_mutable_map();
}

// repeated string repeated = 17;
inline int TestCodeGenMessage::_internal_repeated_size() const {
  return _internal_repeated().size();
}
inline int TestCodeGenMessage::repeated_size() const {
  return _internal_repeated_size();
}
inline void TestCodeGenMessage::clear_repeated() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.repeated_.Clear();
}
inline std::string* TestCodeGenMessage::add_repeated()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_repeated()->Add();
  // @@protoc_insertion_point(field_add_mutable:example.TestCodeGenMessage.repeated)
  return _s;
}
inline const std::string& TestCodeGenMessage::repeated(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:example.TestCodeGenMessage.repeated)
  return _internal_repeated().Get(index);
}
inline std::string* TestCodeGenMessage::mutable_repeated(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:example.TestCodeGenMessage.repeated)
  return _internal_mutable_repeated()->Mutable(index);
}
inline void TestCodeGenMessage::set_repeated(int index, const std::string& value) {
  _internal_mutable_repeated()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:example.TestCodeGenMessage.repeated)
}
inline void TestCodeGenMessage::set_repeated(int index, std::string&& value) {
  _internal_mutable_repeated()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:example.TestCodeGenMessage.repeated)
}
inline void TestCodeGenMessage::set_repeated(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_repeated()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:example.TestCodeGenMessage.repeated)
}
inline void TestCodeGenMessage::set_repeated(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_repeated()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:example.TestCodeGenMessage.repeated)
}
inline void TestCodeGenMessage::set_repeated(int index, absl::string_view value) {
  _internal_mutable_repeated()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:example.TestCodeGenMessage.repeated)
}
inline void TestCodeGenMessage::add_repeated(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_repeated()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:example.TestCodeGenMessage.repeated)
}
inline void TestCodeGenMessage::add_repeated(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_repeated()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:example.TestCodeGenMessage.repeated)
}
inline void TestCodeGenMessage::add_repeated(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_repeated()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:example.TestCodeGenMessage.repeated)
}
inline void TestCodeGenMessage::add_repeated(const char* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_repeated()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:example.TestCodeGenMessage.repeated)
}
inline void TestCodeGenMessage::add_repeated(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_repeated()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:example.TestCodeGenMessage.repeated)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestCodeGenMessage::repeated() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:example.TestCodeGenMessage.repeated)
  return _internal_repeated();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestCodeGenMessage::mutable_repeated() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:example.TestCodeGenMessage.repeated)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_repeated();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestCodeGenMessage::_internal_repeated() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.repeated_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestCodeGenMessage::_internal_mutable_repeated() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.repeated_;
}

// .example.TestCodeGenEnum an_enum = 18;
inline bool TestCodeGenMessage::has_an_enum() const {
  return TestCodeGenOneof_case() == kAnEnum;
}
inline void TestCodeGenMessage::set_has_an_enum() {
  _impl_._oneof_case_[0] = kAnEnum;
}
inline void TestCodeGenMessage::clear_an_enum() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (TestCodeGenOneof_case() == kAnEnum) {
    _impl_.TestCodeGenOneof_.an_enum_ = 0;
    clear_has_TestCodeGenOneof();
  }
}
inline ::example::TestCodeGenEnum TestCodeGenMessage::an_enum() const {
  // @@protoc_insertion_point(field_get:example.TestCodeGenMessage.an_enum)
  return _internal_an_enum();
}
inline void TestCodeGenMessage::set_an_enum(::example::TestCodeGenEnum value) {
  _internal_set_an_enum(value);
  // @@protoc_insertion_point(field_set:example.TestCodeGenMessage.an_enum)
}
inline ::example::TestCodeGenEnum TestCodeGenMessage::_internal_an_enum() const {
  if (TestCodeGenOneof_case() == kAnEnum) {
    return static_cast<::example::TestCodeGenEnum>(_impl_.TestCodeGenOneof_.an_enum_);
  }
  return static_cast<::example::TestCodeGenEnum>(0);
}
inline void TestCodeGenMessage::_internal_set_an_enum(::example::TestCodeGenEnum value) {
  if (TestCodeGenOneof_case() != kAnEnum) {
    clear_TestCodeGenOneof();
    set_has_an_enum();
  }
  _impl_.TestCodeGenOneof_.an_enum_ = value;
}

// bool or_a_boolean = 19;
inline bool TestCodeGenMessage::has_or_a_boolean() const {
  return TestCodeGenOneof_case() == kOrABoolean;
}
inline void TestCodeGenMessage::set_has_or_a_boolean() {
  _impl_._oneof_case_[0] = kOrABoolean;
}
inline void TestCodeGenMessage::clear_or_a_boolean() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (TestCodeGenOneof_case() == kOrABoolean) {
    _impl_.TestCodeGenOneof_.or_a_boolean_ = false;
    clear_has_TestCodeGenOneof();
  }
}
inline bool TestCodeGenMessage::or_a_boolean() const {
  // @@protoc_insertion_point(field_get:example.TestCodeGenMessage.or_a_boolean)
  return _internal_or_a_boolean();
}
inline void TestCodeGenMessage::set_or_a_boolean(bool value) {
  _internal_set_or_a_boolean(value);
  // @@protoc_insertion_point(field_set:example.TestCodeGenMessage.or_a_boolean)
}
inline bool TestCodeGenMessage::_internal_or_a_boolean() const {
  if (TestCodeGenOneof_case() == kOrABoolean) {
    return _impl_.TestCodeGenOneof_.or_a_boolean_;
  }
  return false;
}
inline void TestCodeGenMessage::_internal_set_or_a_boolean(bool value) {
  if (TestCodeGenOneof_case() != kOrABoolean) {
    clear_TestCodeGenOneof();
    set_has_or_a_boolean();
  }
  _impl_.TestCodeGenOneof_.or_a_boolean_ = value;
}

// .google.protobuf.Duration duration = 20;
inline bool TestCodeGenMessage::has_duration() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.duration_ != nullptr);
  return value;
}
inline const ::google::protobuf::Duration& TestCodeGenMessage::_internal_duration() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Duration* p = _impl_.duration_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Duration&>(::google::protobuf::_Duration_default_instance_);
}
inline const ::google::protobuf::Duration& TestCodeGenMessage::duration() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:example.TestCodeGenMessage.duration)
  return _internal_duration();
}
inline void TestCodeGenMessage::unsafe_arena_set_allocated_duration(::google::protobuf::Duration* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.duration_);
  }
  _impl_.duration_ = reinterpret_cast<::google::protobuf::Duration*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:example.TestCodeGenMessage.duration)
}
inline ::google::protobuf::Duration* TestCodeGenMessage::release_duration() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Duration* released = _impl_.duration_;
  _impl_.duration_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Duration* TestCodeGenMessage::unsafe_arena_release_duration() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:example.TestCodeGenMessage.duration)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Duration* temp = _impl_.duration_;
  _impl_.duration_ = nullptr;
  return temp;
}
inline ::google::protobuf::Duration* TestCodeGenMessage::_internal_mutable_duration() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.duration_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Duration>(GetArena());
    _impl_.duration_ = reinterpret_cast<::google::protobuf::Duration*>(p);
  }
  return _impl_.duration_;
}
inline ::google::protobuf::Duration* TestCodeGenMessage::mutable_duration() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Duration* _msg = _internal_mutable_duration();
  // @@protoc_insertion_point(field_mutable:example.TestCodeGenMessage.duration)
  return _msg;
}
inline void TestCodeGenMessage::set_allocated_duration(::google::protobuf::Duration* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.duration_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.duration_ = reinterpret_cast<::google::protobuf::Duration*>(value);
  // @@protoc_insertion_point(field_set_allocated:example.TestCodeGenMessage.duration)
}

inline bool TestCodeGenMessage::has_TestCodeGenOneof() const {
  return TestCodeGenOneof_case() != TESTCODEGENONEOF_NOT_SET;
}
inline void TestCodeGenMessage::clear_has_TestCodeGenOneof() {
  _impl_._oneof_case_[0] = TESTCODEGENONEOF_NOT_SET;
}
inline TestCodeGenMessage::TestCodeGenOneofCase TestCodeGenMessage::TestCodeGenOneof_case() const {
  return TestCodeGenMessage::TestCodeGenOneofCase(_impl_._oneof_case_[0]);
}
#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace example


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::example::TestCodeGenEnum> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::example::TestCodeGenEnum>() {
  return ::example::TestCodeGenEnum_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_code_5fgeneration_2eproto_2epb_2eh
