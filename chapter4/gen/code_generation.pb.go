// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.25.1
// source: code_generation.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TestCodeGenEnum int32

const (
	TestCodeGenEnum_TEST_CODE_GEN_ENUM_UNSPECIFIED TestCodeGenEnum = 0
	TestCodeGenEnum_TEST_CODE_GEN_ENUM_ANOTHER     TestCodeGenEnum = 1
)

// Enum value maps for TestCodeGenEnum.
var (
	TestCodeGenEnum_name = map[int32]string{
		0: "TEST_CODE_GEN_ENUM_UNSPECIFIED",
		1: "TEST_CODE_GEN_ENUM_ANOTHER",
	}
	TestCodeGenEnum_value = map[string]int32{
		"TEST_CODE_GEN_ENUM_UNSPECIFIED": 0,
		"TEST_CODE_GEN_ENUM_ANOTHER":     1,
	}
)

func (x TestCodeGenEnum) Enum() *TestCodeGenEnum {
	p := new(TestCodeGenEnum)
	*p = x
	return p
}

func (x TestCodeGenEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TestCodeGenEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_code_generation_proto_enumTypes[0].Descriptor()
}

func (TestCodeGenEnum) Type() protoreflect.EnumType {
	return &file_code_generation_proto_enumTypes[0]
}

func (x TestCodeGenEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TestCodeGenEnum.Descriptor instead.
func (TestCodeGenEnum) EnumDescriptor() ([]byte, []int) {
	return file_code_generation_proto_rawDescGZIP(), []int{0}
}

type TestCodeGenMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Double   float64          `protobuf:"fixed64,1,opt,name=double,proto3" json:"double,omitempty"`
	Float    float32          `protobuf:"fixed32,2,opt,name=float,proto3" json:"float,omitempty"`
	Int32    int32            `protobuf:"varint,3,opt,name=int32,proto3" json:"int32,omitempty"`
	Int64    int64            `protobuf:"varint,4,opt,name=int64,proto3" json:"int64,omitempty"`
	Uint32   uint32           `protobuf:"varint,5,opt,name=uint32,proto3" json:"uint32,omitempty"`
	Uint64   uint64           `protobuf:"varint,6,opt,name=uint64,proto3" json:"uint64,omitempty"`
	Sint32   int32            `protobuf:"zigzag32,7,opt,name=sint32,proto3" json:"sint32,omitempty"`
	Sint64   int64            `protobuf:"zigzag64,8,opt,name=sint64,proto3" json:"sint64,omitempty"`
	Fixed32  uint32           `protobuf:"fixed32,9,opt,name=fixed32,proto3" json:"fixed32,omitempty"`
	Fixed64  uint64           `protobuf:"fixed64,10,opt,name=fixed64,proto3" json:"fixed64,omitempty"`
	Sfixed32 int32            `protobuf:"fixed32,11,opt,name=sfixed32,proto3" json:"sfixed32,omitempty"`
	Sfixed64 int64            `protobuf:"fixed64,12,opt,name=sfixed64,proto3" json:"sfixed64,omitempty"`
	Bool     bool             `protobuf:"varint,13,opt,name=bool,proto3" json:"bool,omitempty"`
	String_  string           `protobuf:"bytes,14,opt,name=string,proto3" json:"string,omitempty"`
	Bytes    []byte           `protobuf:"bytes,15,opt,name=bytes,proto3" json:"bytes,omitempty"`
	Map      map[string]int32 `protobuf:"bytes,16,rep,name=map,proto3" json:"map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Repeated []string         `protobuf:"bytes,17,rep,name=repeated,proto3" json:"repeated,omitempty"`
	// Types that are assignable to TestCodeGenOneof:
	//
	//	*TestCodeGenMessage_AnEnum
	//	*TestCodeGenMessage_OrABoolean
	TestCodeGenOneof isTestCodeGenMessage_TestCodeGenOneof `protobuf_oneof:"TestCodeGenOneof"`
	Duration         *durationpb.Duration                  `protobuf:"bytes,20,opt,name=duration,proto3" json:"duration,omitempty"`
}

func (x *TestCodeGenMessage) Reset() {
	*x = TestCodeGenMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_code_generation_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestCodeGenMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestCodeGenMessage) ProtoMessage() {}

func (x *TestCodeGenMessage) ProtoReflect() protoreflect.Message {
	mi := &file_code_generation_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestCodeGenMessage.ProtoReflect.Descriptor instead.
func (*TestCodeGenMessage) Descriptor() ([]byte, []int) {
	return file_code_generation_proto_rawDescGZIP(), []int{0}
}

func (x *TestCodeGenMessage) GetDouble() float64 {
	if x != nil {
		return x.Double
	}
	return 0
}

func (x *TestCodeGenMessage) GetFloat() float32 {
	if x != nil {
		return x.Float
	}
	return 0
}

func (x *TestCodeGenMessage) GetInt32() int32 {
	if x != nil {
		return x.Int32
	}
	return 0
}

func (x *TestCodeGenMessage) GetInt64() int64 {
	if x != nil {
		return x.Int64
	}
	return 0
}

func (x *TestCodeGenMessage) GetUint32() uint32 {
	if x != nil {
		return x.Uint32
	}
	return 0
}

func (x *TestCodeGenMessage) GetUint64() uint64 {
	if x != nil {
		return x.Uint64
	}
	return 0
}

func (x *TestCodeGenMessage) GetSint32() int32 {
	if x != nil {
		return x.Sint32
	}
	return 0
}

func (x *TestCodeGenMessage) GetSint64() int64 {
	if x != nil {
		return x.Sint64
	}
	return 0
}

func (x *TestCodeGenMessage) GetFixed32() uint32 {
	if x != nil {
		return x.Fixed32
	}
	return 0
}

func (x *TestCodeGenMessage) GetFixed64() uint64 {
	if x != nil {
		return x.Fixed64
	}
	return 0
}

func (x *TestCodeGenMessage) GetSfixed32() int32 {
	if x != nil {
		return x.Sfixed32
	}
	return 0
}

func (x *TestCodeGenMessage) GetSfixed64() int64 {
	if x != nil {
		return x.Sfixed64
	}
	return 0
}

func (x *TestCodeGenMessage) GetBool() bool {
	if x != nil {
		return x.Bool
	}
	return false
}

func (x *TestCodeGenMessage) GetString_() string {
	if x != nil {
		return x.String_
	}
	return ""
}

func (x *TestCodeGenMessage) GetBytes() []byte {
	if x != nil {
		return x.Bytes
	}
	return nil
}

func (x *TestCodeGenMessage) GetMap() map[string]int32 {
	if x != nil {
		return x.Map
	}
	return nil
}

func (x *TestCodeGenMessage) GetRepeated() []string {
	if x != nil {
		return x.Repeated
	}
	return nil
}

func (m *TestCodeGenMessage) GetTestCodeGenOneof() isTestCodeGenMessage_TestCodeGenOneof {
	if m != nil {
		return m.TestCodeGenOneof
	}
	return nil
}

func (x *TestCodeGenMessage) GetAnEnum() TestCodeGenEnum {
	if x, ok := x.GetTestCodeGenOneof().(*TestCodeGenMessage_AnEnum); ok {
		return x.AnEnum
	}
	return TestCodeGenEnum_TEST_CODE_GEN_ENUM_UNSPECIFIED
}

func (x *TestCodeGenMessage) GetOrABoolean() bool {
	if x, ok := x.GetTestCodeGenOneof().(*TestCodeGenMessage_OrABoolean); ok {
		return x.OrABoolean
	}
	return false
}

func (x *TestCodeGenMessage) GetDuration() *durationpb.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

type isTestCodeGenMessage_TestCodeGenOneof interface {
	isTestCodeGenMessage_TestCodeGenOneof()
}

type TestCodeGenMessage_AnEnum struct {
	AnEnum TestCodeGenEnum `protobuf:"varint,18,opt,name=an_enum,json=anEnum,proto3,enum=example.TestCodeGenEnum,oneof"`
}

type TestCodeGenMessage_OrABoolean struct {
	OrABoolean bool `protobuf:"varint,19,opt,name=or_a_boolean,json=orABoolean,proto3,oneof"`
}

func (*TestCodeGenMessage_AnEnum) isTestCodeGenMessage_TestCodeGenOneof() {}

func (*TestCodeGenMessage_OrABoolean) isTestCodeGenMessage_TestCodeGenOneof() {}

var File_code_generation_proto protoreflect.FileDescriptor

var file_code_generation_proto_rawDesc = []byte{
	0x0a, 0x15, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xac, 0x05, 0x0a, 0x12, 0x54, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x47, 0x65, 0x6e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x75, 0x62, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05,
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x14, 0x0a, 0x05, 0x69,
	0x6e, 0x74, 0x36, 0x34, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x69, 0x6e, 0x74, 0x36,
	0x34, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x69, 0x6e,
	0x74, 0x36, 0x34, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x69, 0x6e, 0x74, 0x36,
	0x34, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x11, 0x52, 0x06, 0x73, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x6e,
	0x74, 0x36, 0x34, 0x18, 0x08, 0x20, 0x01, 0x28, 0x12, 0x52, 0x06, 0x73, 0x69, 0x6e, 0x74, 0x36,
	0x34, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x07, 0x52, 0x07, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x12, 0x18, 0x0a, 0x07, 0x66,
	0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x06, 0x52, 0x07, 0x66, 0x69,
	0x78, 0x65, 0x64, 0x36, 0x34, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33,
	0x32, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0f, 0x52, 0x08, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33,
	0x32, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x10, 0x52, 0x08, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x12, 0x12, 0x0a,
	0x04, 0x62, 0x6f, 0x6f, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x62, 0x6f, 0x6f,
	0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x79, 0x74,
	0x65, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x12,
	0x36, 0x0a, 0x03, 0x6d, 0x61, 0x70, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x65,
	0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x47,
	0x65, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x03, 0x6d, 0x61, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x70, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x18, 0x11, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x70, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x12, 0x33, 0x0a, 0x07, 0x61, 0x6e, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x54,
	0x65, 0x73, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x47, 0x65, 0x6e, 0x45, 0x6e, 0x75, 0x6d, 0x48, 0x00,
	0x52, 0x06, 0x61, 0x6e, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x72, 0x5f, 0x61,
	0x5f, 0x62, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x18, 0x13, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00,
	0x52, 0x0a, 0x6f, 0x72, 0x41, 0x42, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x12, 0x35, 0x0a, 0x08,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x1a, 0x36, 0x0a, 0x08, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x12, 0x0a, 0x10, 0x54,
	0x65, 0x73, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x47, 0x65, 0x6e, 0x4f, 0x6e, 0x65, 0x6f, 0x66, 0x2a,
	0x55, 0x0a, 0x0f, 0x54, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x47, 0x65, 0x6e, 0x45, 0x6e,
	0x75, 0x6d, 0x12, 0x22, 0x0a, 0x1e, 0x54, 0x45, 0x53, 0x54, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f,
	0x47, 0x45, 0x4e, 0x5f, 0x45, 0x4e, 0x55, 0x4d, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1e, 0x0a, 0x1a, 0x54, 0x45, 0x53, 0x54, 0x5f, 0x43,
	0x4f, 0x44, 0x45, 0x5f, 0x47, 0x45, 0x4e, 0x5f, 0x45, 0x4e, 0x55, 0x4d, 0x5f, 0x41, 0x4e, 0x4f,
	0x54, 0x48, 0x45, 0x52, 0x10, 0x01, 0x42, 0x05, 0x50, 0x01, 0x5a, 0x01, 0x2e, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_code_generation_proto_rawDescOnce sync.Once
	file_code_generation_proto_rawDescData = file_code_generation_proto_rawDesc
)

func file_code_generation_proto_rawDescGZIP() []byte {
	file_code_generation_proto_rawDescOnce.Do(func() {
		file_code_generation_proto_rawDescData = protoimpl.X.CompressGZIP(file_code_generation_proto_rawDescData)
	})
	return file_code_generation_proto_rawDescData
}

var file_code_generation_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_code_generation_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_code_generation_proto_goTypes = []interface{}{
	(TestCodeGenEnum)(0),        // 0: example.TestCodeGenEnum
	(*TestCodeGenMessage)(nil),  // 1: example.TestCodeGenMessage
	nil,                         // 2: example.TestCodeGenMessage.MapEntry
	(*durationpb.Duration)(nil), // 3: google.protobuf.Duration
}
var file_code_generation_proto_depIdxs = []int32{
	2, // 0: example.TestCodeGenMessage.map:type_name -> example.TestCodeGenMessage.MapEntry
	0, // 1: example.TestCodeGenMessage.an_enum:type_name -> example.TestCodeGenEnum
	3, // 2: example.TestCodeGenMessage.duration:type_name -> google.protobuf.Duration
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_code_generation_proto_init() }
func file_code_generation_proto_init() {
	if File_code_generation_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_code_generation_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestCodeGenMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_code_generation_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*TestCodeGenMessage_AnEnum)(nil),
		(*TestCodeGenMessage_OrABoolean)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_code_generation_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_code_generation_proto_goTypes,
		DependencyIndexes: file_code_generation_proto_depIdxs,
		EnumInfos:         file_code_generation_proto_enumTypes,
		MessageInfos:      file_code_generation_proto_msgTypes,
	}.Build()
	File_code_generation_proto = out.File
	file_code_generation_proto_rawDesc = nil
	file_code_generation_proto_goTypes = nil
	file_code_generation_proto_depIdxs = nil
}
